name: Backend

on:
  push:
  workflow_dispatch:
env:
  PROJECT: highlander

jobs:
  backend-tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - uses: rapydo/actions/install@v1
        with:
          project: ${PROJECT}
          extra_options: -e MAPS_URL=XXX

      - name: Run Pytest
        run: |

          # Temporary fix, waiting for a public release
          cd projects/highlander/builds/backend
          git clone --depth 1 https://${{ secrets.DDS_USER }}:${{ secrets.DDS_TOKEN }}@${{ secrets.DDS_URL }}.git packages
          cd -

          # Install sample datasets/catalog
          tar -xvf projects/highlander/builds/backend/packages/sample_datasets.tar.gz -C data/catalog/
          cp projects/highlander/builds/backend/packages/confs/*.yaml data/catalog/
          # When the cache, download and logs will be added to the repository with a .gitkeep
          # This mkdir will start to fail... in this case just remove it
          mkdir data/catalog/cache data/catalog/download data/catalog/logs

          rapydo --testing -e MAPS_URL=XXX -e ACTIVATE_GEOSERVER=0 init --force
          rapydo pull --quiet
          rapydo build
          rapydo add task test_task

          rapydo -e AUTH_LOGIN_BAN_TIME=10 start
          rapydo shell backend 'restapi wait'

          rapydo shell backend 'restapi tests --wait --destroy'

          LOGURU_LEVEL=WARNING rapydo list services
          # This should fail if at least one container is in Exit status
          [[ ! $(LOGURU_LEVEL=WARNING rapydo list services | grep -E "Exit|Restarting|Created") ]]

      - name: Coverage
        uses: rapydo/actions/coverage@v1
        with:
          repository: projects/${PROJECT}
          project: ${PROJECT}
          step: backend

      - name: Production mode
        run: |
          rapydo remove --all

          rm projects/highlander/confs/geoserver.service
          touch projects/highlander/confs/geoserver.service

          rapydo --testing --prod -e ACTIVATE_GEOSERVER=0 -e MAPS_URL=XXX init --force
          rapydo pull --quiet
          rapydo ssl --volatile
          rapydo -e AUTH_LOGIN_BAN_TIME=10 start
          sleep 60
          rapydo logs
          curl --insecure -X GET --max-time 5 https://localhost/api/status | grep "Server is alive"
          rapydo logs --tail 20 proxy
          rapydo logs --tail 20 backend

          LOGURU_LEVEL=WARNING rapydo list services
          # This should fail if at least one container is in Exit status
          # Except for frontend that is expected to be exited in prod mode
          [[ ! $(LOGURU_LEVEL=WARNING rapydo list services | grep -v frontend | grep -E "Exit|Restarting|Created") ]]

      - name: Print Logs
        if: failure()
        run: tail -100 data/logs/backend-server.log

      - name: Print Events
        if: failure()
        run: tail -100 data/logs/security-events.log

      - name: Docker Logs
        if: failure()
        run: |
          rapydo logs
