"""empty message

Revision ID: 923318953402
Revises: ce8080af44a6
Create Date: 2022-12-19 13:22:36.165272

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "923318953402"
down_revision = "ce8080af44a6"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    period_enum = postgresql.ENUM(
        "days", "hours", "minutes", "seconds", "microseconds", name="periodenum"
    )
    period_enum.create(op.get_bind())

    op.create_table(
        "schedule",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("crontab", sa.String(length=64), nullable=True),
        sa.Column(
            "period",
            sa.Enum(
                "days",
                "hours",
                "minutes",
                "seconds",
                "microseconds",
                name="periodenum",
                native_enum=False,
            ),
            nullable=True,
        ),
        sa.Column("every", sa.Integer(), nullable=True),
        sa.Column("on_data_ready", sa.Boolean(), nullable=True),
        sa.Column("is_enabled", sa.Boolean(), nullable=True),
        sa.Column("task_name", sa.String(length=64), nullable=True),
        sa.Column("task_args", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("schedule", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_schedule_name"), ["name"], unique=False)

    op.create_table(
        "system_schedule",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["schedule.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_schedule",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"],
            ["schedule.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("request", schema=None) as batch_op:
        batch_op.add_column(sa.Column("schedule_id", sa.Integer(), nullable=True))
        batch_op.create_foreign_key(
            "schedule_id_fk", "schedule", ["schedule_id"], ["id"]
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("request", schema=None) as batch_op:
        batch_op.drop_constraint("schedule_id_fk", type_="foreignkey")
        batch_op.drop_column("schedule_id")

    op.drop_table("user_schedule")
    op.drop_table("system_schedule")
    with op.batch_alter_table("schedule", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_schedule_name"))

    op.drop_table("schedule")

    period_enum = postgresql.ENUM(
        "days", "hours", "minutes", "seconds", "microseconds", name="periodenum"
    )
    period_enum.drop(op.get_bind())

    # ### end Alembic commands ###
